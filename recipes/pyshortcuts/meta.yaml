{% set name = "pyshortcuts" %}
{% set version = "1.7.1" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 94d87302bdd8a5ea222c56d260ea9d9bd27817d97044c47c47872e7812b22e22

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"
  entry_points:
    - pyshortcut = pyshortcuts:shortcut_cli

requirements:
  host:
    - pip
    - python
  run:
    - python
    - pywin32  # [win]
    - six

test:
  requires:
    - numpy
    - pillow
    - pip
    - pytest
    - wxpython
  source_files:
    - tests
    - examples
  imports:
    - pyshortcuts
  commands:
    - python -m pip check
    - pyshortcut --version
    - pyshortcut --help
    - pytest -vv

about:
  home: https://github.com/newville/pyshortcuts
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'create desktop and Start Menu shortcuts for python scripts'

  description: |
    Pyshortcuts helps developers and Python users to create shortcuts on a
    Users Desktop or Start Menu that will run python scripts and applications.
    Pyshortcuts is cross-platform, supporting Windows, MacOS, and Linux each in
    the way most natural for the OS.  On Windows, a Shortcut or Link is
    created.  On Linux a ".desktop" file is created.  On MacOS, a minimal
    Application is created.  In all cases, the shortcuts are put either
    directly on the Desktop or Start Menu , or in a folder on the Desktop or
    Start Menu of the current user.  That means that there is not need for
    elevated permission or writing to system-level files (registry,
    /Applications, /usr/bin).  The user has complete control to rename, move,
    or delete the shortcut after it is created.  Shortcuts can have a custom
    icon (`.ico` files on Windows or Linux, or `.icns` files on MacOS)
    specified, defaulting to a Python icon included with the pyshortcuts
    module.
    Pyshortcuts is pure python, has a small footprint and is very easy to
    install and use either from a python script.  That is to say, it can easily
    be part of a installation (or post-installation process) process for larger
    packages.

extra:
  recipe-maintainers:
    - bollwyvl
